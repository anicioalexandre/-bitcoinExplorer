{"version":3,"sources":["styles/Global.js","styles/Header.js","components/Header.jsx","styles/CryptoCurrencies.js","styles/CurrencyOrders.js","styles/OrdersTable.js","services/setColors.js","components/OrdersTable.jsx","services/fetchEndPoint.js","redux/actions/currenciesInfos.js","styles/CurrencyInfo.js","svg/Tooltip.js","styles/CurrenciesList.js","components/smallComponents/Button.jsx","components/CurrencyInfo.jsx","components/CurrencyOrders.jsx","redux/actions/orderBook.js","pages/CriptoCurrency.jsx","services/createCurrenciesInfoArray.js","services/rankingFilterPagination.js","styles/CriptoRanking.js","styles/RankingPagination.js","components/RankingPagination.jsx","pages/CriptoRanking.jsx","services/convertUnixToDate.js","styles/ChartOptions.js","context/CriptoChartContext.js","components/ChartOptionsData.jsx","components/ChartOptionsTime.jsx","services/availableIntervals.js","components/ChartOptionsInterval.jsx","components/ChartOptions.jsx","pages/CriptoChart.jsx","redux/actions/currencyChart.js","pages/Home.jsx","pages/NotFound.jsx","Routes.jsx","services/filterCurrencies.js","components/smallComponents/Input.jsx","svg/SearchIcon.js","components/CurrenciesList.jsx","styles/App.js","App.jsx","redux/reducers/currenciesInfoAPI.js","redux/reducers/currencyChartAPI.js","redux/reducers/orderBookAPI.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["createGlobalStyle","HeaderStyle","styled","header","Header","history","useHistory","onClick","push","Container","div","Message","h3","OrdersContainer","props","direction","TD","td","color","setInfoColor","number","OrdersTable","orders","names","reverse","map","name","index","key","order","index2","data-testid","action","toFixed","fetchEndpoint","url","fetch","then","response","json","ok","Promise","resolve","reject","requestCurrenciesFailure","error","type","getCurrenciesInfo","endpoint","dispatch","currenciesNamesandValues","currenciesInfo","NumberInfo","span","Tooltip","info","data-tip","aria-hidden","data-fa-processed","data-prefix","data-icon","role","xmlns","viewBox","width","height","fill","d","InputButtonContainer","ButtonStyle","button","background","minWidth","InputStyle","input","CurrencyName","p","CurrenciesListStyle","Button","children","disabled","mapDispatch","connect","state","currenciesInfos","loadingInfo","currency","useParams","useEffect","length","Object","keys","percentChange","baseVolume","quoteVolume","effect","high24hr","low24hr","orderBook","actualCurrency","bids","asks","getOrders","requestOrderFailure","cleanOrders","loading","createCurrenciesInfoArray","currenciesInfoArray","entries","forEach","currencyName","currencyValues","rankingFilterPagination","start","end","filter","sort","columnType","a","b","comparison","Number","compareNumbers","slice","TableContainer","TH","th","PageDisplay","previous","next","startPage","setStartPage","endPage","setEndPage","Math","ceil","useState","setFilter","setOrder","convertUnixToDate","chartData","startTime","chartDataCopy","dataObj","covertedData","Date","date","getHours","toLocaleDateString","ButtonsContainer","ChartButton","H3","CriptoChartContext","React","createContext","ChartOptionsData","useContext","visibleData","setvisibleData","setvisibleData2","setInterval","setStartTime","someTime","times","timesNames","ChartOptionsInterval","interval","selectedTime","availableIntervals","someInterval","intervalsNames","ChartOptionsTime","getCurrencyChart","requestChartSuccess","requestChartFailure","currencyChart","actualUnixDate","floor","getTime","visibleData2","data","margin","top","right","left","bottom","strokeDasharray","strokeOpacity","tick","fontSize","stroke","dataKey","offset","strokeWidth","dot","Provider","value","Home","NotFound","Routes","path","component","CriptoChart","CriptoCurrency","CriptoRanking","exact","filterCurrenciesNames","currenciesData","inputValue","filteredCurrencies","toLowerCase","includes","Input","onChange","placeholder","SearchIcon","getCurrenciesNames","currenciesNames","namesList","loadingNames","setInputValue","selectedCurrency","setCurrency","e","target","App","Global","INITIAL_STATE","combineReducers","store","createStore","rootCombiner","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4326a6dc.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  body {\n    background:#484848;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    color: #ffffff;\n    font-family: 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    margin: 0;\n    padding: 0;\n  }\n  ::-webkit-scrollbar {\n    width: 15px;\n  }\n  ::-webkit-scrollbar-track {\n    background: gray;\n    border-radius: 3px;\n    margin: 0px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #e5ecf4;\n    border-radius: 3px;\n    border: 0.5px solid gray;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const HeaderStyle = styled.header`\n  align-items: center;\n  background: #212121;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 32px;\n  min-height: 15vh;\n  justify-content: space-around;\n  width: 100%;\n  h3 {\n    margin: 0;\n    cursor: pointer;\n    &:hover {\n      opacity: 0.5;\n    }\n  }\n  h6 {\n    margin: 0 40px;\n    cursor: pointer;\n    &:hover {\n      opacity: 0.5;\n    }\n  }\n`;\n","import React from 'react';\nimport { HeaderStyle } from '../styles/Header';\nimport { useHistory } from 'react-router-dom';\n\nconst Header = () => {\n  const history = useHistory();\n  return (\n    <HeaderStyle>\n      <h3 onClick={() => history.push('/')}>bitcoinExplorer</h3>\n      <h6 onClick={() => history.push('/ranking')}>Ranking</h6>\n    </HeaderStyle>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  min-width: 70%;\n`;\n\nexport const Message = styled.h3`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  height: 40vh;\n  min-width: 60%;\n  max-width: 80%;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  h2 {\n    margin: 5px;\n  }\n`;\n\nexport const OrdersContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  @media only screen and (max-width: 800px) {\n    justify-content: flex-start\n    max-width: 70%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: ${(props) => props.direction};\n  align-items: center;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25),\n    inset 0px 4px 4px rgba(0, 0, 0, 0.25);\n  margin: 15px;\n  min-height: 315px;\n  max-width: 220px;\n  width: 220px;\n  table {\n    border-bottom: 1px solid #212121;\n    border-collapse: collapse;\n    border-top: 1px solid #212121;\n    color: white;\n    padding-bottom: 12px;\n    padding-top: 12px;\n    padding: 8px;\n    text-align: center;\n    text-align: left;\n    width: 110px;\n  }\n  th {\n    background: #212121;\n    padding-bottom: 12px;\n    padding-top: 12px;\n  }\n  tr {\n    text-align: center;\n  }\n`;\n\nexport const TD = styled.td`\n  background: #c4c4c4;\n  border-bottom: 1px solid #212121;\n  border-top: 1px solid #212121;\n  color: ${({ color }) => color};\n  font-weight: 500;\n  padding 6px;\n`;\n","export const setActionColor = (action) => {\n  if (action === 'COMPRA') return '#00a59d';\n  if (action === 'VENDA') return '#b50214';\n  return '#000';\n};\n\nexport const setInfoColor = (number) => {\n  if (number >= 0) return \"#00b49d\"\n  return \"#b50214\"\n}\n","import React from 'react';\nimport { Container, TD } from '../styles/OrdersTable';\nimport { setActionColor } from '../services/setColors';\n\nconst OrdersTable = ({ orders, names, reverse }) => {\n  return (\n    <Container direction={reverse ? 'row-reverse' : 'row'}>\n      {names.map((name, index) => (\n        <table key={name}>\n          <thead>\n            <tr key={names[index]}>\n              <th>{names[index]}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders?.map((order, index2) => (\n              <tr data-testid=\"values\" key={order[index] + index + index2}>\n                <TD color={setActionColor(names[index])}>\n                  {index === 1 ? order[index].toFixed(3) : order[index]}\n                </TD>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ))}\n    </Container>\n  );\n};\n\nexport default OrdersTable;\n","const fetchEndpoint = (url) =>\n  fetch(url).then((response) =>\n    response\n      .json()\n      .then((json) =>\n        response.ok ? Promise.resolve(json) : Promise.reject(json)\n      )\n  );\n\nexport default fetchEndpoint;\n","import fetchEndpoint from '../../services/fetchEndPoint';\n\nexport const REQUEST_CURRENCIES_API = 'REQUEST_CURRENCIES_API';\nexport const REQUEST_CURRENCIES_SUCCESS = 'REQUEST_CURRENCIES_SUCCESS';\nexport const REQUEST_CURRENCIES_FAILURE = 'REQUEST_CURRENCIES_FAILURE';\nexport const REQUEST_CURRENCIES_INFO_API = 'REQUEST_CURRENCIES_INFO_API';\nexport const REQUEST_CURRENCIES_INFO_SUCCESS = 'REQUEST_CURRENCIES_INFO_SUCCESS';\n\nexport const requestCurrenciesApi = () => ({\n  type: REQUEST_CURRENCIES_API,\n});\n\nexport const requestCurrenciesSuccess = (currenciesNames) => ({\n  type: REQUEST_CURRENCIES_SUCCESS,\n  currenciesNames,\n});\n\nconst requestCurrenciesFailure = (error) => ({\n  type: REQUEST_CURRENCIES_FAILURE,\n  error,\n});\n\nexport const getCurrenciesNames = (endpoint) => {\n  return (dispatch) => {\n    dispatch(requestCurrenciesApi());\n    return fetchEndpoint(endpoint).then(\n      (currenciesNamesandValues) =>\n        dispatch(\n          requestCurrenciesSuccess(Object.keys(currenciesNamesandValues))\n        ),\n      (error) => dispatch(requestCurrenciesFailure(error))\n    );\n  };\n};\n\nexport const requestCurrenciesInfoApi = () => ({\n  type: REQUEST_CURRENCIES_INFO_API,\n});\n\nconst requestCurrenciesInfoSuccess = (currenciesInfo) => ({\n  type: REQUEST_CURRENCIES_INFO_SUCCESS,\n  currenciesInfo,\n});\n\n// essa action é muito parecida com a getCurrenciesNames, estão separadas para facilitar o entendimento.\n// e para ambas terem action requests distintas:\nexport const getCurrenciesInfo = (endpoint) => {\n  return (dispatch) => {\n    dispatch(requestCurrenciesInfoApi());\n    return fetchEndpoint(endpoint).then(\n      (currenciesNamesandValues) =>\n        dispatch(\n          requestCurrenciesInfoSuccess(currenciesNamesandValues)\n        ),\n      (error) => dispatch(requestCurrenciesFailure(error))\n    );\n  };\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: #c4c4c4;\n  border-radius: 3px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25),\n    inset 0px 4px 4px rgba(0, 0, 0, 0.25);\n  color: #000;\n  display: grid;\n  grid-template-rows: 50px;\n  margin-bottom: 2vh;\n  min-height: 300px;\n  min-width: 300px;\n  place-items: center;\n  h3 {\n    align-items: center;\n    background: #212121;\n    color: #fff;\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    margin: 0;\n    width: 100%;\n  }\n`;\nexport const NumberInfo = styled.span`\n  color: ${({ color = '#000' }) => color};\n  font-weight: 500;\n`;\n","import React from 'react';\n\nconst Tooltip = ({ info }) => (\n  <span data-tip={info}>\n    <svg\n      aria-hidden=\"true\"\n      data-fa-processed\n      data-prefix=\"fas\"\n      data-icon=\"question-circle\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      width=\"12\"\n      height=\"12\"\n    >\n      <path\n        fill=\"#00b49d\"\n        d=\"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\"\n      ></path>\n    </svg>\n  </span>\n);\n\nexport default Tooltip;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1 1 200px;\n  flex-direction: column;\n  justify-content: center;\n  min-width: 300px;\n  max-width: 15%;\n  @media only screen and (max-width: 800px) {\n    margin-top: 25px;\n  }\n`;\n\nexport const InputButtonContainer = styled.div`\n  align-items: center;\n  display: flex;\n  height: 40px;\n  justify-content: space-evenly;\n  width: 100%;\n`;\n\nexport const ButtonStyle = styled.button`\n  align-items: center;\n  background: ${({ background = '#00b49d' }) => background};\n  border-radius: 3px;\n  border: none;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  color: #000;\n  cursor: pointer;\n  display: flex;\n  font-weight: 600;\n  height: 40px;\n  justify-content: center;\n  margin: 0 5px;\n  outline: none;\n  min-width: ${({ minWidth = `${80}px` }) => minWidth};\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  border-radius: 3px;\n  border: none;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  color: #000;\n  padding: 14px 8px;\n  width: 70%;\n`;\n\nexport const CurrencyName = styled.p`\n  align-items: center;\n  background: ${(props) => props.background};\n  border-bottom: 0.1px solid #000;\n  border-radius: 3px;\n  box-shadow: inset 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  color: ${(props) => props.color};\n  display: flex;\n  font-weight: 500;\n  height: 45px;\n  justify-content: center;\n  margin: 0;\n  &:hover {\n    background: #00b49d;\n    color: #fff;\n  }\n`;\n\nexport const CurrenciesListStyle = styled.div`\n  background: #c4c4c4;\n  border-radius: 3px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25),\n    inset 0px 4px 4px rgba(0, 0, 0, 0.25);\n  color: #000;\n  font-weight: 350;\n  height: 60vh;\n  margin: 5px 0;\n  overflow-x: hidden;\n  overflow-y: auto;\n  text-align: center;\n  width: 100%;\n`;\n","import React from 'react';\nimport { ButtonStyle } from '../../styles/CurrenciesList';\n\nconst Button = ({ background, children, disabled, onClick, minWidth }) => {\n  return (\n    <ButtonStyle\n      background={background}\n      disabled={disabled}\n      minWidth={minWidth}\n      onClick={onClick}\n    >\n      {children}\n    </ButtonStyle>\n  );\n};\n\nexport default Button;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrenciesInfo } from '../redux/actions/currenciesInfos';\nimport { Container, NumberInfo } from '../styles/CurrencyInfo';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { setInfoColor } from '../services/setColors';\nimport Tooltip from '../svg/Tooltip';\nimport ReactTooltip from 'react-tooltip';\nimport Button from './smallComponents/Button';\n\nconst CurrencyInfo = ({\n  error,\n  loadingInfo,\n  currenciesInfo,\n  getCurrenciesInfo,\n}) => {\n  const { currency } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    if (currenciesInfo.length === 0)\n      getCurrenciesInfo('https://poloniex.com/public?command=returnTicker');\n  }, []);\n\n  return (\n    <Container>\n      {error && <h3>Falha na requisição...</h3>}\n      {loadingInfo && <h3>Carregando...</h3>}\n      {Object.keys(currenciesInfo).length !== 0 && (\n        <>\n          <h3>Trade Info</h3>\n          <div>\n            Variação (%):{' '}\n            <NumberInfo\n              data-testid=\"info\"\n              color={setInfoColor(currenciesInfo[currency]?.percentChange)}\n            >\n              {(currenciesInfo[currency]?.percentChange * 100).toFixed(2)}\n            </NumberInfo>\n          </div>\n          <div>\n            Volume base:{' '}\n            <NumberInfo data-testid=\"info\">\n              {currenciesInfo[currency]?.baseVolume}\n            </NumberInfo>\n          </div>\n          <div>\n            Volume ajustado{' '}\n            <Tooltip info=\"Calculado através do volume base dividido pelo preço médio nas últimas 24h.\" />\n            :{' '}\n            <NumberInfo data-testid=\"info\">\n              {currenciesInfo[currency]?.quoteVolume}\n            </NumberInfo>\n            <ReactTooltip effect=\"solid\" />\n          </div>\n          <div>\n            Máxima (24h):{' '}\n            <NumberInfo data-testid=\"info\">\n              {currenciesInfo[currency]?.high24hr}\n            </NumberInfo>\n          </div>\n          <div>\n            Mínima (24h):{' '}\n            <NumberInfo data-testid=\"info\">\n              {currenciesInfo[currency]?.low24hr}\n            </NumberInfo>\n          </div>\n          <Button\n            onClick={() => history.push(`/chart/${currency}`)}\n            minWidth={`${150}px`}\n          >\n            Ver gráfico\n          </Button>\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst mapState = (state) => ({\n  currenciesInfo: state.currenciesInfos.currenciesInfo,\n  loadingInfo: state.currenciesInfos.loadingInfo,\n  error: state.currenciesInfos.error,\n});\n\nconst mapDispatch = {\n  getCurrenciesInfo,\n};\n\nexport default connect(mapState, mapDispatch)(CurrencyInfo);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, OrdersContainer } from '../styles/CurrencyOrders';\nimport OrdersTable from './OrdersTable';\nimport CurrencyInfo from './CurrencyInfo';\nimport { useParams } from 'react-router-dom';\n\nconst CurrencyOrders = ({ orders, actualCurrency }) => {\n  const { currency } = useParams();\n  return (\n    <Container>\n      <h2>Book de Ofertas: {currency}</h2>\n      <OrdersContainer>\n        <OrdersTable\n          reverse={true}\n          names={['COMPRA', 'QTD']}\n          orders={orders?.bids}\n        />\n        <OrdersTable names={['VENDA', 'QTD']} orders={orders?.asks} />\n        <CurrencyInfo />\n      </OrdersContainer>\n    </Container>\n  );\n};\n\nconst mapState = (state) => ({\n  orders: state.orderBook.orders,\n  actualCurrency: state.orderBook.actualCurrency,\n});\n\nexport default connect(mapState)(CurrencyOrders);\n","import fetchEndpoint from '../../services/fetchEndPoint';\n\nexport const REQUEST_ORDER_API = 'REQUEST_ORDER_API';\nexport const REQUEST_ORDER_SUCCESS = 'REQUEST_ORDER_SUCCESS';\nexport const REQUEST_ORDER_FAILURE = 'REQUEST_ORDER_FAILURE';\nexport const CLEAN_ORDERS = 'CLEAN_ORDERS';\n\nexport const requestOrderApi = () => ({\n  type: REQUEST_ORDER_API,\n});\n\nexport const requestOrderSuccess = ({ asks, bids }) => ({\n  type: REQUEST_ORDER_SUCCESS,\n  orders: { asks, bids },\n});\n\nconst requestOrderFailure = (error) => ({\n  type: REQUEST_ORDER_FAILURE,\n  error,\n});\n\nexport const cleanOrders = () => ({\n  type: CLEAN_ORDERS,\n})\n\nexport const getOrders = (endpoint) => {\n  return (dispatch) => {\n    dispatch(requestOrderApi());\n    return fetchEndpoint(endpoint).then(\n      (orders) => dispatch(requestOrderSuccess(orders)),\n      (error) => dispatch(requestOrderFailure(error))\n    );\n  };\n};\n","import React, { useEffect } from 'react';\nimport { Container, Message } from '../styles/CryptoCurrencies';\nimport CurrencyOrders from '../components/CurrencyOrders';\nimport { connect } from 'react-redux';\nimport { getOrders, cleanOrders } from '../redux/actions/orderBook';\nimport { useParams } from 'react-router-dom';\n\nconst CriptoCurrency = ({ loading, error, orders, getOrders, cleanOrders }) => {\n  const { currency } = useParams();\n  useEffect(() => {\n    getOrders(\n      `https://poloniex.com/public?command=returnOrderBook&currencyPair=${currency}&depth=10`\n    );\n    return () => {\n      cleanOrders(); // limpando as ordens quando o componente é desmontado\n    };\n  }, [getOrders, cleanOrders, currency]);\n  \n  return (\n    <Container>\n      {error && <Message>Falha na requisição, tente novamente!</Message>}\n      {loading && <Message>Carregando...</Message>}\n      {orders.asks && <CurrencyOrders />}\n    </Container>\n  );\n};\n\nconst mapState = (state) => ({\n  orders: state.orderBook.orders,\n  loading: state.orderBook.loading,\n  error: state.orderBook.error,\n});\n\nconst mapDispatch = {\n  getOrders,\n  cleanOrders,\n};\n\nexport default connect(mapState, mapDispatch)(CriptoCurrency);\n","// essa função recebe o objeto (gerado pela API) de informações das criptomoedas do tipo\n// { BTC_BTS: {...}, ... , USDT_RING: {...}} e o transforma em um array com o nome de cada\n// moeda dentro do seu respectivo objeto que contém as demais informações das moedas do tipo\n// [ { ..., name: 'BTC_BTS' }, ... , { ..., name: 'USDT_RING' } ]\n\nconst createCurrenciesInfoArray = (currenciesInfo) => {\n  let currenciesInfoArray = [];\n  Object.entries(currenciesInfo).forEach(([currencyName, currencyValues]) => {\n    currencyValues.name = currencyName;\n    currenciesInfoArray = [...currenciesInfoArray, currencyValues];\n  });\n  return currenciesInfoArray;\n};\n\nexport default createCurrenciesInfoArray;\n","import createCurrenciesInfoArray from './createCurrenciesInfoArray';\n\n// função pra ordernar números em ordem ASC (order = false) ou DESC (order = true):\nconst compareNumbers = (columnType, order) => (a, b) => {\n  let comparison = 0;\n  if (Number(a[columnType]) > Number(b[columnType])) {\n    comparison = 1;\n  } else if (Number(a[columnType]) < Number(b[columnType])) {\n    comparison = -1;\n  }\n  return order ? comparison * -1 : comparison;\n};\n\nconst rankingFilterPagination = (currenciesInfo, start, end, filter, order) => {\n  const currenciesInfoArray = createCurrenciesInfoArray(currenciesInfo);\n  if (filter) currenciesInfoArray.sort(compareNumbers(filter, order));\n  return currenciesInfoArray.slice(start, end);\n};\n\nexport default rankingFilterPagination;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  min-width: 70%;\n  overflow-x: auto;\n  h2 {\n    margin: 0;\n  }\n  span {\n    font-size: 13px;\n    max-width: 650px;\n    text-align: center;\n  }\n  @media only screen and (max-width: 800px) {\n    align-items: flex-start;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const TableContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25),\n    inset 0px 4px 4px rgba(0, 0, 0, 0.25);\n  margin: 15px;\n  width: 728px;\n  @media only screen and (max-width: 800px) {\n    width: 500px;\n  }\n  table {\n    border-bottom: 1px solid #212121;\n    border-collapse: collapse;\n    border-top: 1px solid #212121;\n    color: black;\n    padding-bottom: 24px;\n    padding-top: 24px;\n    padding: 8px;\n    table-layout: fixed:\n    text-align: center;\n    text-align: left;\n    width: 728px;\n    @media only screen and (max-width: 800px) {\n      width: 500px;\n    }\n  }\n  tbody {\n    tr{\n      cursor: pointer;\n      &:hover {\n      opacity: 0.8;\n    }\n    }\n  }\n  th {\n    background: #212121;\n    color: #fff;\n    min-width: 180px;\n    @media only screen and (max-width: 800px) {\n    min-width: 125px;\n    }\n  }\n  tr {\n    text-align: center;\n  }\n`;\n\nexport const TH = styled.th`\n  background: ${({ background = '#212121' }) => background};\n  color: white;\n  cursor: pointer;\n  padding-bottom: 12px;\n  padding-top: 12px;\n  min-width: 180px;\n  @media only screen and (max-width: 800px) {\n    min-width: 125px;\n  }\n  &:hover {\n    background: #00b49d;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-bottom: 2vh;\n  width: 200px;\n`;\n\nexport const PageDisplay = styled.div`\n  display: flex;\n  justify-content: center;\n  min-width: 45px;\n`;\n","import React from 'react';\nimport Button from './smallComponents/Button';\nimport { connect } from 'react-redux';\nimport { Container, PageDisplay } from '../styles/RankingPagination';\n\nconst RankingPagination = ({ previous, next, currenciesInfo }) => {\n  const [startPage, setStartPage] = previous;\n  const [endPage, setEndPage] = next;\n  return (\n    <Container>\n      <Button\n        background={startPage === 0 ? 'gray' : '#00b49d'}\n        disabled={startPage === 0}\n        onClick={() => {\n          setStartPage(startPage - 10);\n          setEndPage(endPage - 10);\n        }}\n      >\n        Anterior\n      </Button>\n      <PageDisplay data-testid=\"page-display\">\n        {endPage / 10}/{Math.ceil(Object.keys(currenciesInfo).length / 10)}\n      </PageDisplay>\n      <Button\n        background={endPage >= Object.keys(currenciesInfo).length ? 'gray' : '#00b49d'}\n        disabled={endPage >= Object.keys(currenciesInfo).length}\n        onClick={() => {\n          setStartPage(startPage + 10);\n          setEndPage(endPage + 10);\n        }}\n      >\n        Próximo\n      </Button>\n    </Container>\n  );\n};\n\nconst mapState = (state) => ({\n  currenciesInfo: state.currenciesInfos.currenciesInfo,\n});\n\nexport default connect(mapState)(RankingPagination);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport rankingFilterPagination from '../services/rankingFilterPagination';\nimport { getCurrenciesInfo } from '../redux/actions/currenciesInfos';\nimport { Container, TableContainer, TH } from '../styles/CriptoRanking';\nimport { Message } from '../styles/CryptoCurrencies';\nimport { TD } from '../styles/OrdersTable';\nimport { setInfoColor } from '../services/setColors';\nimport Tooltip from '../svg/Tooltip';\nimport ReactTooltip from 'react-tooltip';\nimport RankingPagination from '../components/RankingPagination';\nimport { useHistory } from 'react-router-dom';\n\nconst CriptoRanking = ({\n  currenciesInfo,\n  loadingInfo,\n  error,\n  getCurrenciesInfo,\n}) => {\n  const history = useHistory();\n  useEffect(() => {\n    if (currenciesInfo.length === 0)\n      getCurrenciesInfo('https://poloniex.com/public?command=returnTicker');\n  }, []);\n\n  const [startPage, setStartPage] = useState(0);\n  const [endPage, setEndPage] = useState(10);\n  const [filter, setFilter] = useState('');\n  const [order, setOrder] = useState(false);\n\n  return (\n    <Container>\n      {error && <Message>Falha na requisição, tente novamente!</Message>}\n      {loadingInfo && <Message>Carregando...</Message>}\n      {currenciesInfo.length !== 0 && (\n        <>\n          <h2>Ranking das Criptomoedas</h2>\n          <span>\n            Clique nos títulos da tabela para ordernar os números em ordem\n            crescente ou decrescente. Para ver mais informações sobre um par de\n            moedas específico, clique sobre seu nome!\n          </span>\n          <TableContainer>\n            <table>\n              <thead>\n                <tr>\n                  <th>Nome</th>\n                  <TH\n                    background={\n                      filter === 'percentChange' ? '#00b49d' : '#212121'\n                    }\n                    onClick={() => {\n                      setFilter('percentChange');\n                      setOrder(!order);\n                    }}\n                  >\n                    Variação (%)\n                  </TH>\n                  <TH\n                    background={filter === 'baseVolume' ? '#00b49d' : '#212121'}\n                    onClick={() => {\n                      setFilter('baseVolume');\n                      setOrder(!order);\n                    }}\n                  >\n                    Volume base\n                  </TH>\n                  <TH\n                    background={\n                      filter === 'quoteVolume' ? '#00b49d' : '#212121'\n                    }\n                    onClick={() => {\n                      setFilter('quoteVolume');\n                      setOrder(!order);\n                    }}\n                  >\n                    Volume ajustado{' '}\n                    <Tooltip info=\"Calculado através do volume base dividido pelo preço médio nas últimas 24h.\" />\n                    <ReactTooltip type=\"light\" effect=\"solid\" />\n                  </TH>\n                </tr>\n              </thead>\n              <tbody>\n                {/* função que recebe os nomes e informações das moedas, dados de paginação e de filtro,retornando\n                um array paginado (10 elementos de cada vez), filtrado e ordenado (caso o filtro exista): */}\n                {rankingFilterPagination(\n                  currenciesInfo,\n                  startPage,\n                  endPage,\n                  filter,\n                  order\n                ).map(({ name, percentChange, baseVolume, quoteVolume }) => (\n                  <tr\n                    onClick={() => history.push(`/orders/${name}`)}\n                    key={name}\n                  >\n                    <TD data-testid=\"currency-name\">{name}</TD>\n                    <TD color={setInfoColor(percentChange)}>\n                      {(percentChange * 100).toFixed(2)}\n                    </TD>\n                    <TD>{Number(baseVolume).toFixed(4)}</TD>\n                    <TD>{Number(quoteVolume).toFixed(4)}</TD>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </TableContainer>\n          <RankingPagination\n            previous={[startPage, setStartPage]}\n            next={[endPage, setEndPage]}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst mapState = (state) => ({\n  currenciesInfo: state.currenciesInfos.currenciesInfo,\n  loadingInfo: state.currenciesInfos.loadingInfo,\n  error: state.currenciesInfos.error,\n});\n\nconst mapDispatch = {\n  getCurrenciesInfo,\n};\n\nexport default connect(mapState, mapDispatch)(CriptoRanking);\n","// essa função converte a data em unix para a data convencional (ou em horas se o tempo for = 1 dia) \n// e adiciona esse novo valor em uma nova chave (convertedData) dentro de cada objeto com os valores\nconst convertUnixToDate = (chartData, startTime) => {\n  const chartDataCopy = [...chartData];\n  if (startTime <= 100000)\n    chartDataCopy.forEach(\n      (dataObj) =>\n        (dataObj.covertedData = `${new Date(dataObj.date * 1000).getHours()}h`)\n    );\n  else\n    chartDataCopy.forEach(\n      (dataObj) =>\n        (dataObj.covertedData = new Date(\n          dataObj.date * 1000\n        ).toLocaleDateString())\n    );\n  return chartDataCopy;\n};\n\nexport default convertUnixToDate;\n\n// 1 dia   : 86400\n// 4 horas : 14400\n// 2 horas : 7200\n// 30 min  : 1800\n// 15 min  : 900\n// 5 min   : 300\n\n//limites de intervalos para cada tempo\n// 1 dia -> min 300 max 14400\n\n// 5 dias -> min 1800\n//\n// 1 mes -> min 1800\n\n// 6 meses -> min 86400\n\n// 1 ano -> min 86400\n","import styled from 'styled-components';\nimport { ButtonStyle } from './CurrenciesList';\n\nexport const Container = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const ButtonsContainer = styled(Container)`\n  flex-direction: row;\n  margin-bottom: 1vh;\n`;\n\nexport const InputContainer = styled(Container)`\n  flex-direction: row;\n  margin-bottom: 1vh;\n  label {\n    min-width: 70px;\n  }\n  input {\n    box-shadow: none;\n    min-width: 25px;\n  }\n`;\n\nexport const ChartButton = styled(ButtonStyle)`\n  color: ${({ color = '#00000' }) => color};\n  height: unset;\n  min-height: 25px;\n`;\n\nexport const H3 = styled.h3`\n  margin: 0;\n  width: 100px;\n`;\n","import React from 'react';\n\nconst CriptoChartContext = React.createContext();\n\nexport default CriptoChartContext;\n","import React, { useContext } from 'react';\nimport CriptoChartContext from '../context/CriptoChartContext';\nimport { ChartButton, ButtonsContainer, H3 } from '../styles/ChartOptions';\n\nconst ChartOptionsData = () => {\n  const { visibleData, setvisibleData, setvisibleData2 } = useContext(\n    CriptoChartContext\n  );\n\n  return (\n    <ButtonsContainer>\n      <H3>Tipo: </H3>\n      <ChartButton\n        background={visibleData === 'weightedAverage' ? '#00b49d' : 'gray'}\n        color={visibleData === 'weightedAverage' ? '#fff' : '#000'}\n        onClick={() => {\n          setvisibleData('weightedAverage');\n          setvisibleData2('');\n        }}\n      >\n        Média ponderada\n      </ChartButton>\n      <ChartButton\n        color={visibleData === 'high' ? '#fff' : '#000'}\n        background={visibleData === 'high' ? '#00b49d' : 'gray'}\n        onClick={() => {\n          setvisibleData('high');\n          setvisibleData2('low');\n        }}\n      >\n        Máxima & Mínima\n      </ChartButton>\n\n      <ChartButton\n        color={visibleData === 'volume' ? '#fff' : '#000'}\n        background={visibleData === 'volume' ? '#00b49d' : 'gray'}\n        onClick={() => {\n          setvisibleData('volume');\n          setvisibleData2('');\n        }}\n      >\n        Volume base\n      </ChartButton>\n      <ChartButton\n        color={visibleData === 'quoteVolume' ? '#fff' : '#000'}\n        background={visibleData === 'quoteVolume' ? '#00b49d' : 'gray'}\n        onClick={() => {\n          setvisibleData('quoteVolume');\n          setvisibleData2('');\n        }}\n      >\n        Volume ajustado\n      </ChartButton>\n    </ButtonsContainer>\n  );\n};\n\nexport default ChartOptionsData;\n","import React, { useContext } from 'react';\nimport CriptoChartContext from '../context/CriptoChartContext';\nimport { ChartButton, ButtonsContainer, H3 } from '../styles/ChartOptions';\nimport { timesNames } from '../services/availableIntervals';\n\nconst ChartOptionsData = () => {\n  const { setInterval, startTime, setStartTime } = useContext(CriptoChartContext);\n\n  return (\n    <ButtonsContainer>\n      <H3>Tempo: </H3>\n      {[86400, 432000, 2592000, 15552000, 31536000].map((someTime) => (\n        <ChartButton\n          background={startTime === someTime ? '#00b49d' : 'gray'}\n          color={startTime === someTime ? '#fff' : '#000'}\n          onClick={() => {\n            setStartTime(someTime);\n            setInterval(14400); // iniciando no intervalo default (4 horas)\n          }}\n          key={someTime}\n        >\n          {timesNames(someTime)}\n        </ChartButton>\n      ))}\n    </ButtonsContainer>\n  );\n};\n\nexport default ChartOptionsData;\n","export const availableIntervals = (selectedTime) => {\n  switch (selectedTime) {\n    case 86400: //1 dia\n      return [300, 900, 1800, 7200, 14400];\n    case 432000: //5 dias\n      return [1800, 7200, 14400, 86400];\n    case 2592000: //1 mês\n      return [7200, 14400, 86400];\n    case 15552000: //6 meses\n      return [14400, 86400];\n    case 31536000: //1 ano\n      return [14400, 86400];\n    default:\n      break;\n  }\n};\n\nexport const intervalsNames = (interval) => {\n  switch (interval) {\n    case 300:\n      return '5min';\n    case 900:\n      return '15min';\n    case 1800:\n      return '30min';\n    case 7200:\n      return '2 horas';\n    case 14400:\n      return '4 horas';\n    case 86400:\n      return '24 horas';\n    default:\n      break;\n  }\n};\n\nexport const timesNames = (times) => {\n  switch (times) {\n    case 86400:\n      return '1 dia';\n    case 432000:\n      return '5 dias';\n    case 2592000:\n      return '1 mês';\n    case 15552000:\n      return '6 meses';\n    case 31536000:\n      return '1 ano';\n    default:\n      break;\n  }\n};\n","import React, { useContext } from 'react';\nimport CriptoChartContext from '../context/CriptoChartContext';\nimport { ChartButton, ButtonsContainer, H3 } from '../styles/ChartOptions';\nimport {\n  availableIntervals,\n  intervalsNames,\n} from '../services/availableIntervals';\n\nconst ChartOptionsInterval = () => {\n  const { startTime, interval, setInterval } = useContext(CriptoChartContext);\n\n  return (\n    <ButtonsContainer>\n      <H3>Intervalo: </H3>\n      {/* gerando botões de intervalo dinamicamente devido ao fato de nem todos os botoes poderem \n      ter acesso a determinados tempos(por questões de tamanho dos dados de requisição de API), os\n      tempos disponiveis para cada intervalo é determiando pela funçãoavailableIntervals */}\n      {availableIntervals(startTime).map((someInterval) => (\n        <ChartButton\n          background={interval === someInterval ? '#00b49d' : 'gray'}\n          color={interval === someInterval ? '#fff' : '#000'}\n          onClick={() => setInterval(someInterval)}\n          key={someInterval}\n        >\n          {intervalsNames(someInterval)}\n        </ChartButton>\n      ))}\n    </ButtonsContainer>\n  );\n};\n\nexport default ChartOptionsInterval;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from '../styles/ChartOptions';\nimport ChartOptionsData from '../components/ChartOptionsData';\nimport ChartOptionsTime from '../components/ChartOptionsTime';\nimport ChartOptionsInterval from './ChartOptionsInterval';\n\nconst ChartOptions = () => {\n  return (\n    <Container>\n      <ChartOptionsData />\n      <ChartOptionsTime />\n      <ChartOptionsInterval />\n    </Container>\n  );\n};\n\nconst mapState = (state) => ({\n  currenciesInfo: state.currenciesInfos.currenciesInfo,\n});\n\nexport default connect(mapState)(ChartOptions);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrencyChart } from '../redux/actions/currencyChart';\nimport { useParams } from 'react-router-dom';\nimport convertUnixToDate from '../services/convertUnixToDate';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip as ChartTooltip,\n} from 'recharts';\nimport ChartOptions from '../components/ChartOptions';\nimport CriptoChartContext from '../context/CriptoChartContext';\nimport { Container } from '../styles/CriptoRanking';\nimport { Message } from '../styles/CryptoCurrencies';\nimport ReactTooltip from 'react-tooltip';\nimport Tooltip from '../svg/Tooltip';\n\nconst CriptoChart = ({ getCurrencyChart, chartData, loading, error }) => {\n  const actualUnixDate = Math.floor(new Date().getTime() / 1000);\n  const { currency } = useParams();\n  const [visibleData, setvisibleData] = useState('weightedAverage');\n  const [visibleData2, setvisibleData2] = useState('');\n  const [startTime, setStartTime] = useState(2592000); //default 1 mes\n  const [interval, setInterval] = useState(14400); // default: 4 horas\n\n  // estado local armazenado em um contexto (CriptoChartContext) e distribuido\n  // para os filhos de ChartOptions\n  const state = {\n    visibleData,\n    setvisibleData,\n    visibleData2,\n    setvisibleData2,\n    startTime,\n    setStartTime,\n    interval,\n    setInterval,\n  };\n\n  useEffect(() => {\n    getCurrencyChart(\n      `https://poloniex.com/public?command=returnChartData&currencyPair=${currency}&start=${\n        actualUnixDate - startTime\n      }&end=${actualUnixDate}&period=${interval}`\n    );\n  }, [currency, startTime, interval]);\n\n  return (\n    <Container>\n      {error && <Message>Falha na requisição, tente novamente!</Message>}\n      {loading && <Message>Carregando...</Message>}\n      {chartData.length !== 0 && (\n        <>\n          <h2>Gráfico de {currency}</h2>\n          <LineChart\n            width={700}\n            height={350}\n            data={convertUnixToDate(chartData, startTime)}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n          >\n            <CartesianGrid strokeDasharray=\"solid\" strokeOpacity=\"0.1\" />\n            <XAxis\n              tick={{ fontSize: 13 }}\n              stroke=\"white\"\n              dataKey=\"covertedData\"\n            />\n            <YAxis tick={{ fontSize: 13 }} stroke=\"white\" width={70} />\n            <ChartTooltip offset={100} />\n            <Line\n              strokeWidth={2.5}\n              dot={false}\n              type=\"monotone\"\n              dataKey={visibleData}\n              stroke=\"#00b49d\"\n            />\n            <Line\n              strokeWidth={2.5}\n              dot={false}\n              type=\"monotone\"\n              dataKey={visibleData2}\n              stroke=\"red\"\n            />\n          </LineChart>\n\n          <CriptoChartContext.Provider value={state}>\n            <ChartOptions />\n          </CriptoChartContext.Provider>\n          <span>\n            Intervalos disponíveis{' '}\n            <Tooltip info=\"Alguns intervalos não estão disponíveis para todos os tempos, devido ao elevado volume de dados.\" />\n            <ReactTooltip />\n          </span>\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst mapState = (state) => ({\n  chartData: state.currencyChart.chartData,\n  loading: state.currencyChart.loading,\n  error: state.currencyChart.error,\n});\n\nconst mapDispatch = {\n  getCurrencyChart,\n};\n\nexport default connect(mapState, mapDispatch)(CriptoChart);\n","import fetchEndpoint from '../../services/fetchEndPoint';\n\nexport const REQUEST_CHART_API = 'REQUEST_CHART_API';\nexport const REQUEST_CHART_SUCCESS = 'REQUEST_CHART_SUCCESS';\nexport const REQUEST_CHART_FAILURE = 'REQUEST_CHART_FAILURE';\n\nexport const requestChartApi = () => ({\n  type: REQUEST_CHART_API,\n});\n\nexport const requestChartSuccess = (chartData) => ({\n  type: REQUEST_CHART_SUCCESS,\n  chartData,\n});\n\nconst requestChartFailure = (error) => ({\n  type: REQUEST_CHART_FAILURE,\n  error,\n});\n\nexport const getCurrencyChart = (endpoint) => {\n  return (dispatch) => {\n    dispatch(requestChartApi());\n    return fetchEndpoint(endpoint).then(\n      (chartData) => dispatch(requestChartSuccess(chartData)),\n      (error) => dispatch(requestChartFailure(error))\n    );\n  };\n};\n","import React from 'react';\nimport { Container, Message } from '../styles/CryptoCurrencies';\n\nconst Home = () => (\n  <Container>\n    <Message>Escolha um par de moedas!</Message>\n  </Container>\n);\n\nexport default Home;\n","import React from 'react';\nimport { Message, Container } from '../styles/CryptoCurrencies';\n\nconst NotFound = () => (\n  <Container>\n    <Message>Página não encontrada.</Message>\n  </Container>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport CriptoCurrency from './pages/CriptoCurrency';\nimport CriptoRanking from './pages/CriptoRanking';\nimport CriptoChart from './pages/CriptoChart';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/chart/:currency\" component={CriptoChart} />\n      <Route path=\"/orders/:currency\" component={CriptoCurrency} />\n      <Route path=\"/ranking\" component={CriptoRanking} />\n      <Route exact path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","const filterCurrenciesNames = (currenciesData, inputValue) => {\n  let filteredCurrencies = [...currenciesData];\n  if (inputValue)\n  filteredCurrencies = filteredCurrencies.filter((currencyName) =>\n      currencyName.toLowerCase().includes(inputValue.toLowerCase())\n    );\n  return filteredCurrencies;\n};\n\nexport default filterCurrenciesNames;\n","import React from 'react';\nimport { InputStyle } from '../../styles/CurrenciesList';\n\nconst Input = ({ onChange, placeholder }) => {\n  return <InputStyle onChange={onChange} placeholder={placeholder} />;\n};\n\nexport default Input;\n","import React from 'react';\n\nconst SearchIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n  >\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n  </svg>\n);\n\nexport default SearchIcon;\n","import React, { useEffect, useState } from 'react';\nimport {\n  CurrenciesListStyle,\n  InputButtonContainer,\n  Container,\n  CurrencyName,\n} from '../styles/CurrenciesList';\nimport { connect } from 'react-redux';\nimport { getCurrenciesNames } from '../redux/actions/currenciesInfos';\nimport { getOrders } from '../redux/actions/orderBook';\nimport { useHistory } from 'react-router-dom';\nimport filterCurrenciesNames from '../services/filterCurrencies';\nimport Input from './smallComponents/Input';\nimport Button from './smallComponents/Button';\nimport SearchIcon from '../svg/SearchIcon';\n\nconst CurrenciesList = ({\n  getCurrenciesNames,\n  currenciesNames,\n  getOrders,\n  orders,\n  loadingNames,\n  error,\n}) => {\n  useEffect(() => {\n    getCurrenciesNames('https://poloniex.com/public?command=returnTicker');\n  }, [getCurrenciesNames]);\n\n  const [inputValue, setInputValue] = useState('');\n  const [selectedCurrency, setCurrency] = useState(null);\n  let history = useHistory();\n\n  return (\n    <Container>\n      <InputButtonContainer>\n        <Input\n          placeholder=\"Busque por par de moedas\"\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <Button\n          background={!selectedCurrency ? 'gray' : '#00b49d'}\n          disabled={!selectedCurrency}\n          onClick={() => history.push(`/orders/${selectedCurrency}`)}\n        >\n          <SearchIcon />\n        </Button>\n      </InputButtonContainer>\n      <CurrenciesListStyle>\n        {error && <h3>Falha na requisição, tente novamente!</h3>}\n        {loadingNames && <h3>Carregando...</h3>}\n        {/* função de filtro que recebe os nomes das moedas e retorna um array filtrado, caso o filtro exista */}\n        {filterCurrenciesNames(currenciesNames, inputValue).map(\n          (currencyName) => (\n            <CurrencyName\n              background={currencyName === selectedCurrency ? '#00B49D' : '#c4c4c4'}\n              color={currencyName === selectedCurrency ? '#fff' : '#000'}\n              onClick={() => setCurrency(currencyName)}\n              key={currencyName}\n            >\n              {currencyName}\n            </CurrencyName>\n          )\n        )}\n      </CurrenciesListStyle>\n    </Container>\n  );\n};\n\nconst mapState = (state) => ({\n  currenciesNames: state.currenciesInfos.namesList,\n  error: state.currenciesInfos.error,\n  loadingNames: state.currenciesInfos.loadingNames,\n  orders: state.orderBook.orders,\n});\n\nconst mapDispatch = {\n  getCurrenciesNames,\n  getOrders,\n};\n\nexport default connect(mapState, mapDispatch)(CurrenciesList);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: flex-end;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap-reverse;\n  justify-content: space-around;\n  margin: 3vh 2vw;\n  @media only screen and (min-width: 1600px) {\n    margin: 5vh 12vw;\n  }\n  @media only screen and (max-width: 800px) {\n    align-items: flex-start;\n    margin: auto;\n  }\n`;\n","import React from 'react';\nimport GlobalStyle from './styles/Global';\nimport Header from './components/Header';\nimport Routes from './Routes';\nimport CurrenciesList from './components/CurrenciesList';\nimport { Container } from './styles/App';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <Container>\n        <CurrenciesList />\n        <Routes />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import {\n  REQUEST_CURRENCIES_API,\n  REQUEST_CURRENCIES_FAILURE,\n  REQUEST_CURRENCIES_SUCCESS,\n  REQUEST_CURRENCIES_INFO_API,\n  REQUEST_CURRENCIES_INFO_SUCCESS,\n} from '../actions/currenciesInfos';\n\nconst INITIAL_STATE = {\n  loadingNames: false,\n  loadingInfo: false,\n  namesList: [],\n  currenciesInfo: [],\n};\n\nconst currenciesInfos = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_CURRENCIES_API:\n      return { ...state, loadingNames: true };\n    case REQUEST_CURRENCIES_FAILURE:\n      return { ...state, loadingNames: false, loadingInfo: false, error: action.error };\n    case REQUEST_CURRENCIES_SUCCESS:\n      return { ...state, loadingNames: false, namesList: action.currenciesNames };\n    case REQUEST_CURRENCIES_INFO_API:\n      return { ...state, loadingInfo: true };\n    case REQUEST_CURRENCIES_INFO_SUCCESS:\n      return { ...state, loadingInfo: false, currenciesInfo: action.currenciesInfo };\n    default:\n      return state;\n  }\n};\n\nexport default currenciesInfos;\n","import {\n  REQUEST_CHART_API,\n  REQUEST_CHART_FAILURE,\n  REQUEST_CHART_SUCCESS,\n} from '../actions/currencyChart';\n\nconst INITIAL_STATE = {\n  loading: false,\n  chartData: [],\n};\n\nconst currencyChart = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_CHART_API:\n      return { ...state, loading: true, chartData: [] };\n    case REQUEST_CHART_FAILURE:\n      return { ...state, loading: false, error: action.error };\n    case REQUEST_CHART_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        chartData: action.chartData,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default currencyChart;\n","import {\n  REQUEST_ORDER_API,\n  REQUEST_ORDER_FAILURE,\n  REQUEST_ORDER_SUCCESS,\n  CLEAN_ORDERS,\n} from '../actions/orderBook';\n\nconst INITIAL_STATE = {\n  loading: false,\n  orders: [],\n};\n\nconst orderBook = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_ORDER_API:\n      return { ...state, loading: true, orders: [] };\n    case REQUEST_ORDER_FAILURE:\n      return { ...state, loading: false, error: action.error };\n    case REQUEST_ORDER_SUCCESS:\n      return { ...state, loading: false, orders: action.orders };\n    case CLEAN_ORDERS:\n      return { ...state, orders: [] };\n    default:\n      return state;\n  }\n};\n\nexport default orderBook;\n","import { combineReducers } from 'redux';\nimport currenciesInfos from './currenciesInfoAPI';\nimport currencyChart from './currencyChartAPI';\nimport orderBook from './orderBookAPI';\n\nexport default combineReducers({ currenciesInfos, orderBook, currencyChart });\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootCombiner from '../reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootCombiner,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}